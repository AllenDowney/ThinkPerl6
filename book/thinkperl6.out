\BOOKMARK [0][-]{chapter*.1}{Preface}{}% 1
\BOOKMARK [-1][-]{part.1}{I Starting with the basics}{}% 2
\BOOKMARK [0][-]{chapter.1}{The way of the program}{part.1}% 3
\BOOKMARK [1][-]{section.1.1}{What is a program?}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.2}{Running Perl 6}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.3}{The first program}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.4}{Arithmetic operators}{chapter.1}% 7
\BOOKMARK [1][-]{section.1.5}{Values and types}{chapter.1}% 8
\BOOKMARK [1][-]{section.1.6}{Formal and natural languages}{chapter.1}% 9
\BOOKMARK [1][-]{section.1.7}{Debugging}{chapter.1}% 10
\BOOKMARK [1][-]{section.1.8}{Glossary}{chapter.1}% 11
\BOOKMARK [1][-]{section.1.9}{Exercises}{chapter.1}% 12
\BOOKMARK [0][-]{chapter.2}{Variables, expressions and statements}{part.1}% 13
\BOOKMARK [1][-]{section.2.1}{Assignment statements}{chapter.2}% 14
\BOOKMARK [1][-]{section.2.2}{Variable names}{chapter.2}% 15
\BOOKMARK [1][-]{section.2.3}{Expressions and statements}{chapter.2}% 16
\BOOKMARK [1][-]{section.2.4}{Script mode}{chapter.2}% 17
\BOOKMARK [1][-]{section.2.5}{One-liner mode}{chapter.2}% 18
\BOOKMARK [1][-]{section.2.6}{Order of operations}{chapter.2}% 19
\BOOKMARK [1][-]{section.2.7}{String operations}{chapter.2}% 20
\BOOKMARK [1][-]{section.2.8}{Comments}{chapter.2}% 21
\BOOKMARK [1][-]{section.2.9}{Debugging}{chapter.2}% 22
\BOOKMARK [1][-]{section.2.10}{Glossary}{chapter.2}% 23
\BOOKMARK [1][-]{section.2.11}{Exercises}{chapter.2}% 24
\BOOKMARK [0][-]{chapter.3}{Functions and subroutines}{part.1}% 25
\BOOKMARK [1][-]{section.3.1}{Function calls}{chapter.3}% 26
\BOOKMARK [1][-]{section.3.2}{Functions and methods}{chapter.3}% 27
\BOOKMARK [1][-]{section.3.3}{Math functions}{chapter.3}% 28
\BOOKMARK [1][-]{section.3.4}{Composition}{chapter.3}% 29
\BOOKMARK [1][-]{section.3.5}{Adding new functions or subroutines}{chapter.3}% 30
\BOOKMARK [1][-]{section.3.6}{Definitions and uses}{chapter.3}% 31
\BOOKMARK [1][-]{section.3.7}{Flow of execution}{chapter.3}% 32
\BOOKMARK [1][-]{section.3.8}{Parameters and arguments}{chapter.3}% 33
\BOOKMARK [1][-]{section.3.9}{Variables and parameters are local}{chapter.3}% 34
\BOOKMARK [1][-]{section.3.10}{Stack diagrams}{chapter.3}% 35
\BOOKMARK [1][-]{section.3.11}{Fruitful functions and void functions}{chapter.3}% 36
\BOOKMARK [1][-]{section.3.12}{Function signatures}{chapter.3}% 37
\BOOKMARK [1][-]{section.3.13}{Immutable and mutable parameters}{chapter.3}% 38
\BOOKMARK [1][-]{section.3.14}{Functions and subroutines as first-class objects}{chapter.3}% 39
\BOOKMARK [1][-]{section.3.15}{Why functions and subroutines?}{chapter.3}% 40
\BOOKMARK [1][-]{section.3.16}{Debugging}{chapter.3}% 41
\BOOKMARK [1][-]{section.3.17}{Glossary}{chapter.3}% 42
\BOOKMARK [1][-]{section.3.18}{Exercises}{chapter.3}% 43
\BOOKMARK [0][-]{chapter.4}{Conditionals and recursion}{part.1}% 44
\BOOKMARK [1][-]{section.4.1}{Integer division and modulo}{chapter.4}% 45
\BOOKMARK [1][-]{section.4.2}{Boolean expressions}{chapter.4}% 46
\BOOKMARK [1][-]{section.4.3}{Logical operators}{chapter.4}% 47
\BOOKMARK [1][-]{section.4.4}{Conditional execution}{chapter.4}% 48
\BOOKMARK [1][-]{section.4.5}{Alternative execution}{chapter.4}% 49
\BOOKMARK [1][-]{section.4.6}{Chained conditionals}{chapter.4}% 50
\BOOKMARK [1][-]{section.4.7}{Nested conditionals}{chapter.4}% 51
\BOOKMARK [1][-]{section.4.8}{If conditionals as statement modifiers}{chapter.4}% 52
\BOOKMARK [1][-]{section.4.9}{Unless conditional statement}{chapter.4}% 53
\BOOKMARK [1][-]{section.4.10}{For loops}{chapter.4}% 54
\BOOKMARK [1][-]{section.4.11}{Recursion}{chapter.4}% 55
\BOOKMARK [1][-]{section.4.12}{Stack diagrams for recursive subroutines}{chapter.4}% 56
\BOOKMARK [1][-]{section.4.13}{Infinite recursion}{chapter.4}% 57
\BOOKMARK [1][-]{section.4.14}{Keyboard input}{chapter.4}% 58
\BOOKMARK [1][-]{section.4.15}{Program arguments and the MAIN subroutine}{chapter.4}% 59
\BOOKMARK [1][-]{section.4.16}{Debugging}{chapter.4}% 60
\BOOKMARK [1][-]{section.4.17}{Glossary}{chapter.4}% 61
\BOOKMARK [1][-]{section.4.18}{Exercises}{chapter.4}% 62
\BOOKMARK [0][-]{chapter.5}{Fruitful subroutines}{part.1}% 63
\BOOKMARK [1][-]{section.5.1}{Return values}{chapter.5}% 64
\BOOKMARK [1][-]{section.5.2}{Incremental development}{chapter.5}% 65
\BOOKMARK [1][-]{section.5.3}{Composition}{chapter.5}% 66
\BOOKMARK [1][-]{section.5.4}{Boolean functions}{chapter.5}% 67
\BOOKMARK [1][-]{section.5.5}{A complete programming language}{chapter.5}% 68
\BOOKMARK [1][-]{section.5.6}{More recursion}{chapter.5}% 69
\BOOKMARK [1][-]{section.5.7}{Leap of faith}{chapter.5}% 70
\BOOKMARK [1][-]{section.5.8}{One more example}{chapter.5}% 71
\BOOKMARK [1][-]{section.5.9}{Checking types}{chapter.5}% 72
\BOOKMARK [1][-]{section.5.10}{Multi subroutines}{chapter.5}% 73
\BOOKMARK [1][-]{section.5.11}{Debugging}{chapter.5}% 74
\BOOKMARK [1][-]{section.5.12}{Glossary}{chapter.5}% 75
\BOOKMARK [1][-]{section.5.13}{Exercises}{chapter.5}% 76
\BOOKMARK [0][-]{chapter.6}{Iteration}{part.1}% 77
\BOOKMARK [1][-]{section.6.1}{Reassignment}{chapter.6}% 78
\BOOKMARK [1][-]{section.6.2}{Updating variables}{chapter.6}% 79
\BOOKMARK [1][-]{section.6.3}{The while statement}{chapter.6}% 80
\BOOKMARK [1][-]{section.6.4}{Local variables and variable scoping}{chapter.6}% 81
\BOOKMARK [1][-]{section.6.5}{Control flow statement \(last, next, etc.\)}{chapter.6}% 82
\BOOKMARK [1][-]{section.6.6}{Square roots}{chapter.6}% 83
\BOOKMARK [1][-]{section.6.7}{Algorithms}{chapter.6}% 84
\BOOKMARK [1][-]{section.6.8}{Debugging}{chapter.6}% 85
\BOOKMARK [1][-]{section.6.9}{Glossary}{chapter.6}% 86
\BOOKMARK [1][-]{section.6.10}{Exercises}{chapter.6}% 87
\BOOKMARK [0][-]{chapter.7}{Strings}{part.1}% 88
\BOOKMARK [1][-]{section.7.1}{A string is a sequence}{chapter.7}% 89
\BOOKMARK [1][-]{section.7.2}{Common string operators}{chapter.7}% 90
\BOOKMARK [2][-]{subsection.7.2.1}{String length}{section.7.2}% 91
\BOOKMARK [2][-]{subsection.7.2.2}{Searching for a substring within the string}{section.7.2}% 92
\BOOKMARK [2][-]{subsection.7.2.3}{Extracting a substring from a string}{section.7.2}% 93
\BOOKMARK [2][-]{subsection.7.2.4}{A few other useful string functions or methods}{section.7.2}% 94
\BOOKMARK [1][-]{section.7.3}{Traversal with a for loop}{chapter.7}% 95
\BOOKMARK [1][-]{section.7.4}{Looping and counting}{chapter.7}% 96
\BOOKMARK [1][-]{section.7.5}{Regular expressions \(regexes\)}{chapter.7}% 97
\BOOKMARK [1][-]{section.7.6}{Using regexes}{chapter.7}% 98
\BOOKMARK [1][-]{section.7.7}{Building your regex patterns}{chapter.7}% 99
\BOOKMARK [2][-]{subsection.7.7.1}{Literal matching}{section.7.7}% 100
\BOOKMARK [2][-]{subsection.7.7.2}{Character classes}{section.7.7}% 101
\BOOKMARK [2][-]{subsection.7.7.3}{Quantifiers}{section.7.7}% 102
\BOOKMARK [2][-]{subsection.7.7.4}{Anchors and assertions}{section.7.7}% 103
\BOOKMARK [2][-]{subsection.7.7.5}{Alternation}{section.7.7}% 104
\BOOKMARK [2][-]{subsection.7.7.6}{Grouping and capturing}{section.7.7}% 105
\BOOKMARK [2][-]{subsection.7.7.7}{Adverbs \(or modifiers\)}{section.7.7}% 106
\BOOKMARK [2][-]{subsection.7.7.8}{Exercises on regexes}{section.7.7}% 107
\BOOKMARK [1][-]{section.7.8}{Putting it all together}{chapter.7}% 108
\BOOKMARK [2][-]{subsection.7.8.1}{Extracting dates}{section.7.8}% 109
\BOOKMARK [2][-]{subsection.7.8.2}{Extracting an IP address}{section.7.8}% 110
\BOOKMARK [1][-]{section.7.9}{Substitutions}{chapter.7}% 111
\BOOKMARK [2][-]{subsection.7.9.1}{The subst method}{section.7.9}% 112
\BOOKMARK [2][-]{subsection.7.9.2}{The s/search/replace/ construct}{section.7.9}% 113
\BOOKMARK [2][-]{subsection.7.9.3}{Using captures}{section.7.9}% 114
\BOOKMARK [2][-]{subsection.7.9.4}{Adverbs}{section.7.9}% 115
\BOOKMARK [1][-]{section.7.10}{Debugging}{chapter.7}% 116
\BOOKMARK [1][-]{section.7.11}{Glossary}{chapter.7}% 117
\BOOKMARK [1][-]{section.7.12}{Exercises}{chapter.7}% 118
\BOOKMARK [0][-]{chapter.8}{Case study: word play}{part.1}% 119
\BOOKMARK [1][-]{section.8.1}{Reading from and writing to files}{chapter.8}% 120
\BOOKMARK [1][-]{section.8.2}{Reading word lists}{chapter.8}% 121
\BOOKMARK [1][-]{section.8.3}{Exercises}{chapter.8}% 122
\BOOKMARK [1][-]{section.8.4}{Search}{chapter.8}% 123
\BOOKMARK [2][-]{subsection.8.4.1}{Words longer than 20 characters}{section.8.4}% 124
\BOOKMARK [2][-]{subsection.8.4.2}{Words with no ``e''}{section.8.4}% 125
\BOOKMARK [2][-]{subsection.8.4.3}{Avoiding other letters}{section.8.4}% 126
\BOOKMARK [2][-]{subsection.8.4.4}{Using only some letters}{section.8.4}% 127
\BOOKMARK [2][-]{subsection.8.4.5}{Using all letters of a list}{section.8.4}% 128
\BOOKMARK [2][-]{subsection.8.4.6}{Alphabetic order}{section.8.4}% 129
\BOOKMARK [2][-]{subsection.8.4.7}{Another example of reduction to a previously solved problem}{section.8.4}% 130
\BOOKMARK [1][-]{section.8.5}{Debugging}{chapter.8}% 131
\BOOKMARK [1][-]{section.8.6}{Glossary}{chapter.8}% 132
\BOOKMARK [1][-]{section.8.7}{Exercises}{chapter.8}% 133
\BOOKMARK [0][-]{chapter.9}{Arrays and lists}{part.1}% 134
\BOOKMARK [1][-]{section.9.1}{Lists and arrays are sequences}{chapter.9}% 135
\BOOKMARK [1][-]{section.9.2}{Arrays are mutable}{chapter.9}% 136
\BOOKMARK [1][-]{section.9.3}{Adding new elements to an array or removing some}{chapter.9}% 137
\BOOKMARK [1][-]{section.9.4}{Stacks and queues}{chapter.9}% 138
\BOOKMARK [1][-]{section.9.5}{Other ways to modify an array}{chapter.9}% 139
\BOOKMARK [1][-]{section.9.6}{Traversing a list}{chapter.9}% 140
\BOOKMARK [1][-]{section.9.7}{New looping constructs}{chapter.9}% 141
\BOOKMARK [1][-]{section.9.8}{Map, filter and reduce}{chapter.9}% 142
\BOOKMARK [2][-]{subsection.9.8.1}{Reducing a list to a value}{section.9.8}% 143
\BOOKMARK [2][-]{subsection.9.8.2}{Mapping a list to another list}{section.9.8}% 144
\BOOKMARK [2][-]{subsection.9.8.3}{Filtering the elements of a list}{section.9.8}% 145
\BOOKMARK [2][-]{subsection.9.8.4}{Higher order functions and functional programming}{section.9.8}% 146
\BOOKMARK [1][-]{section.9.9}{Fixed-size, typed and shaped arrays}{chapter.9}% 147
\BOOKMARK [1][-]{section.9.10}{Multidimensional arrays}{chapter.9}% 148
\BOOKMARK [1][-]{section.9.11}{Sorting arrays or lists}{chapter.9}% 149
\BOOKMARK [1][-]{section.9.12}{More advanced sorting techniques}{chapter.9}% 150
\BOOKMARK [1][-]{section.9.13}{Debugging}{chapter.9}% 151
\BOOKMARK [1][-]{section.9.14}{Glossary}{chapter.9}% 152
\BOOKMARK [1][-]{section.9.15}{Exercises}{chapter.9}% 153
\BOOKMARK [0][-]{chapter.10}{Hashes}{part.1}% 154
\BOOKMARK [1][-]{section.10.1}{A hash is a mapping}{chapter.10}% 155
\BOOKMARK [1][-]{section.10.2}{Common operations on hashes}{chapter.10}% 156
\BOOKMARK [1][-]{section.10.3}{Hash as a collection of counters}{chapter.10}% 157
\BOOKMARK [1][-]{section.10.4}{Looping and hashes}{chapter.10}% 158
\BOOKMARK [1][-]{section.10.5}{Reverse lookup}{chapter.10}% 159
\BOOKMARK [1][-]{section.10.6}{Testing for existence}{chapter.10}% 160
\BOOKMARK [1][-]{section.10.7}{Hash keys are unique}{chapter.10}% 161
\BOOKMARK [1][-]{section.10.8}{Hashes and arrays}{chapter.10}% 162
\BOOKMARK [1][-]{section.10.9}{Memos}{chapter.10}% 163
\BOOKMARK [1][-]{section.10.10}{Hashes as dispatch tables}{chapter.10}% 164
\BOOKMARK [1][-]{section.10.11}{Global variables}{chapter.10}% 165
\BOOKMARK [1][-]{section.10.12}{Debugging}{chapter.10}% 166
\BOOKMARK [1][-]{section.10.13}{Glossary}{chapter.10}% 167
\BOOKMARK [1][-]{section.10.14}{Exercises}{chapter.10}% 168
\BOOKMARK [0][-]{chapter.11}{Case study: data structure selection}{part.1}% 169
\BOOKMARK [1][-]{section.11.1}{The ternary conditional operator}{chapter.11}% 170
\BOOKMARK [1][-]{section.11.2}{The given ... when ``switch'' statement}{chapter.11}% 171
\BOOKMARK [1][-]{section.11.3}{Subroutines named and optional parameters}{chapter.11}% 172
\BOOKMARK [2][-]{subsection.11.3.1}{Named parameters}{section.11.3}% 173
\BOOKMARK [2][-]{subsection.11.3.2}{Optional parameters}{section.11.3}% 174
\BOOKMARK [1][-]{section.11.4}{Word frequency analysis}{chapter.11}% 175
\BOOKMARK [1][-]{section.11.5}{Random numbers}{chapter.11}% 176
\BOOKMARK [1][-]{section.11.6}{Word histogram}{chapter.11}% 177
\BOOKMARK [1][-]{section.11.7}{Most common words}{chapter.11}% 178
\BOOKMARK [1][-]{section.11.8}{Optional parameters}{chapter.11}% 179
\BOOKMARK [1][-]{section.11.9}{Hash subtraction}{chapter.11}% 180
\BOOKMARK [1][-]{section.11.10}{Constructing new operators}{chapter.11}% 181
\BOOKMARK [1][-]{section.11.11}{Sets, bags and mixes}{chapter.11}% 182
\BOOKMARK [1][-]{section.11.12}{Random words}{chapter.11}% 183
\BOOKMARK [1][-]{section.11.13}{Markov analysis}{chapter.11}% 184
\BOOKMARK [1][-]{section.11.14}{Data structures}{chapter.11}% 185
\BOOKMARK [1][-]{section.11.15}{Building your own data structures}{chapter.11}% 186
\BOOKMARK [2][-]{subsection.11.15.1}{Linked lists}{section.11.15}% 187
\BOOKMARK [2][-]{subsection.11.15.2}{Trees}{section.11.15}% 188
\BOOKMARK [2][-]{subsection.11.15.3}{Binary heaps}{section.11.15}% 189
\BOOKMARK [1][-]{section.11.16}{Debugging}{chapter.11}% 190
\BOOKMARK [1][-]{section.11.17}{Glossary}{chapter.11}% 191
\BOOKMARK [1][-]{section.11.18}{Exercises: Huffman coding}{chapter.11}% 192
\BOOKMARK [2][-]{subsection.11.18.1}{Variable-length codes}{section.11.18}% 193
\BOOKMARK [2][-]{subsection.11.18.2}{The frequency table}{section.11.18}% 194
\BOOKMARK [2][-]{subsection.11.18.3}{Building the Huffman code}{section.11.18}% 195
\BOOKMARK [-1][-]{part.2}{II Moving forward}{}% 196
\BOOKMARK [0][-]{chapter.12}{Introduction to the second part of this book}{part.2}% 197
\BOOKMARK [0][-]{chapter.13}{Classes and objects}{part.2}% 198
\BOOKMARK [1][-]{section.13.1}{Objects, methods and Object oriented programming}{chapter.13}% 199
\BOOKMARK [1][-]{section.13.2}{Programmer-defined types}{chapter.13}% 200
\BOOKMARK [1][-]{section.13.3}{Attributes}{chapter.13}% 201
\BOOKMARK [1][-]{section.13.4}{Creating methods}{chapter.13}% 202
\BOOKMARK [1][-]{section.13.5}{Rectangles and object composition}{chapter.13}% 203
\BOOKMARK [1][-]{section.13.6}{Instances as return values}{chapter.13}% 204
\BOOKMARK [1][-]{section.13.7}{Inheritance}{chapter.13}% 205
\BOOKMARK [2][-]{subsection.13.7.1}{The Pixel class}{section.13.7}% 206
\BOOKMARK [2][-]{subsection.13.7.2}{The MovablePoint class}{section.13.7}% 207
\BOOKMARK [2][-]{subsection.13.7.3}{Multiple inheritance: attractive, but is it wise?}{section.13.7}% 208
\BOOKMARK [1][-]{section.13.8}{Roles and composition}{chapter.13}% 209
\BOOKMARK [2][-]{subsection.13.8.1}{A mammal class and a pet-animal role}{section.13.8}% 210
\BOOKMARK [2][-]{subsection.13.8.2}{Role composition and code reuse}{section.13.8}% 211
\BOOKMARK [2][-]{subsection.13.8.3}{Roles, classes, objects, and types}{section.13.8}% 212
\BOOKMARK [1][-]{section.13.9}{Method delegation}{chapter.13}% 213
\BOOKMARK [1][-]{section.13.10}{Polymorphism}{chapter.13}% 214
\BOOKMARK [1][-]{section.13.11}{Encapsulation}{chapter.13}% 215
\BOOKMARK [2][-]{subsection.13.11.1}{Private methods}{section.13.11}% 216
\BOOKMARK [2][-]{subsection.13.11.2}{Constructing objects with private attributes}{section.13.11}% 217
\BOOKMARK [1][-]{section.13.12}{Interface and implementation}{chapter.13}% 218
\BOOKMARK [1][-]{section.13.13}{Object-oriented programming: a tale}{chapter.13}% 219
\BOOKMARK [2][-]{subsection.13.13.1}{The fable of the shepherd}{section.13.13}% 220
\BOOKMARK [2][-]{subsection.13.13.2}{The moral}{section.13.13}% 221
\BOOKMARK [1][-]{section.13.14}{Debugging}{chapter.13}% 222
\BOOKMARK [2][-]{subsection.13.14.1}{The Perl 6 debugger}{section.13.14}% 223
\BOOKMARK [2][-]{subsection.13.14.2}{Getting some help}{section.13.14}% 224
\BOOKMARK [2][-]{subsection.13.14.3}{Stepping through the code}{section.13.14}% 225
\BOOKMARK [2][-]{subsection.13.14.4}{Stopping at the right place with breakpoints}{section.13.14}% 226
\BOOKMARK [2][-]{subsection.13.14.5}{Logging information with trace points}{section.13.14}% 227
\BOOKMARK [2][-]{subsection.13.14.6}{Stepping through a regex match}{section.13.14}% 228
\BOOKMARK [1][-]{section.13.15}{Glossary}{chapter.13}% 229
\BOOKMARK [0][-]{chapter.14}{Regexes and grammars}{part.2}% 230
\BOOKMARK [1][-]{section.14.1}{A brief reminder}{chapter.14}% 231
\BOOKMARK [1][-]{section.14.2}{Declarative programming, another programming paradigm}{chapter.14}% 232
\BOOKMARK [1][-]{section.14.3}{Captures}{chapter.14}% 233
\BOOKMARK [1][-]{section.14.4}{Subrules or named rules}{chapter.14}% 234
\BOOKMARK [1][-]{section.14.5}{Grammars}{chapter.14}% 235
\BOOKMARK [1][-]{section.14.6}{Grammar inheritance}{chapter.14}% 236
\BOOKMARK [1][-]{section.14.7}{Actions objects}{chapter.14}% 237
\BOOKMARK [1][-]{section.14.8}{A grammar for parsing JSON}{chapter.14}% 238
\BOOKMARK [2][-]{subsection.14.8.1}{The JSON format}{section.14.8}% 239
\BOOKMARK [2][-]{subsection.14.8.2}{Our JSON sample}{section.14.8}% 240
\BOOKMARK [2][-]{subsection.14.8.3}{Writing the JSON grammar step by step}{section.14.8}% 241
\BOOKMARK [2][-]{subsection.14.8.4}{The JSON grammar}{section.14.8}% 242
\BOOKMARK [2][-]{subsection.14.8.5}{Adding actions}{section.14.8}% 243
\BOOKMARK [1][-]{section.14.9}{Inheritance and mutable grammars}{chapter.14}% 244
\BOOKMARK [1][-]{section.14.10}{Debugging}{chapter.14}% 245
\BOOKMARK [1][-]{section.14.11}{Glossary}{chapter.14}% 246
\BOOKMARK [1][-]{section.14.12}{Exercise: A grammar for an arithmetic calculator}{chapter.14}% 247
\BOOKMARK [0][-]{chapter.15}{Functional Programming}{part.2}% 248
\BOOKMARK [1][-]{section.15.1}{Higher order functions}{chapter.15}% 249
\BOOKMARK [2][-]{subsection.15.1.1}{A refresher on functions as first-class objects}{section.15.1}% 250
\BOOKMARK [2][-]{subsection.15.1.2}{Anonymous subroutines and lambdas}{section.15.1}% 251
\BOOKMARK [2][-]{subsection.15.1.3}{Closures}{section.15.1}% 252
\BOOKMARK [1][-]{section.15.2}{List processing and pipe-line programming}{chapter.15}% 253
\BOOKMARK [2][-]{subsection.15.2.1}{Feed and backward feed operators}{section.15.2}% 254
\BOOKMARK [2][-]{subsection.15.2.2}{The reduction metaoperator}{section.15.2}% 255
\BOOKMARK [2][-]{subsection.15.2.3}{The hyperoperator}{section.15.2}% 256
\BOOKMARK [2][-]{subsection.15.2.4}{The ``X'' cross and ``Z'' zip operators}{section.15.2}% 257
\BOOKMARK [2][-]{subsection.15.2.5}{List operators, a summary}{section.15.2}% 258
\BOOKMARK [2][-]{subsection.15.2.6}{Creating new operators}{section.15.2}% 259
\BOOKMARK [1][-]{section.15.3}{Creating your own map-like functions}{chapter.15}% 260
\BOOKMARK [2][-]{subsection.15.3.1}{Custom versions of map, grep, etc.}{section.15.3}% 261
\BOOKMARK [2][-]{subsection.15.3.2}{Our own version of a sort function}{section.15.3}% 262
\BOOKMARK [2][-]{subsection.15.3.3}{An iterator version of map}{section.15.3}% 263
\BOOKMARK [2][-]{subsection.15.3.4}{An iterator version of grep}{section.15.3}% 264
\BOOKMARK [1][-]{section.15.4}{The gather and take construct}{chapter.15}% 265
\BOOKMARK [1][-]{section.15.5}{Lazy lists and the sequence operator}{chapter.15}% 266
\BOOKMARK [2][-]{subsection.15.5.1}{The sequence operator}{section.15.5}% 267
\BOOKMARK [2][-]{subsection.15.5.2}{Infinite lists}{section.15.5}% 268
\BOOKMARK [2][-]{subsection.15.5.3}{Using an explicit generator}{section.15.5}% 269
\BOOKMARK [1][-]{section.15.6}{Currying and the whatever operator}{chapter.15}% 270
\BOOKMARK [2][-]{subsection.15.6.1}{Creating a curried subroutine}{section.15.6}% 271
\BOOKMARK [2][-]{subsection.15.6.2}{Currying an existing subroutine with the assuming method}{section.15.6}% 272
\BOOKMARK [2][-]{subsection.15.6.3}{Currying with the whatever star parameter}{section.15.6}% 273
\BOOKMARK [1][-]{section.15.7}{Debugging}{chapter.15}% 274
\BOOKMARK [1][-]{section.15.8}{Glossary}{chapter.15}% 275
\BOOKMARK [0][-]{chapter.16}{Some final advice}{part.2}% 276
\BOOKMARK [1][-]{section.16.1}{Make it clear, keep it simple}{chapter.16}% 277
\BOOKMARK [1][-]{section.16.2}{Do's and Don'ts}{chapter.16}% 278
\BOOKMARK [1][-]{section.16.3}{Use idioms}{chapter.16}% 279
\BOOKMARK [1][-]{section.16.4}{What's next?}{chapter.16}% 280
\BOOKMARK [0][-]{appendix.A}{Solutions to the exercises}{part.2}% 281
\BOOKMARK [1][-]{section.A.1}{Exercises of Chapter 3: Functions and subroutines}{appendix.A}% 282
\BOOKMARK [2][-]{subsection.A.1.1}{Exercise 3.1: subroutine right-justify \(p. 44\)}{section.A.1}% 283
\BOOKMARK [2][-]{subsection.A.1.2}{Exercise 3.2: subroutine do-twice \(p. 44\)}{section.A.1}% 284
\BOOKMARK [2][-]{subsection.A.1.3}{Exercise 3.3: subroutine print-grid \(p. 44\)}{section.A.1}% 285
\BOOKMARK [1][-]{section.A.2}{Exercises of Chapter 4: Conditionals and recursion}{appendix.A}% 286
\BOOKMARK [2][-]{subsection.A.2.1}{Subroutine do-n-times \(exercise suggested in section 4.12, p. 58\)}{section.A.2}% 287
\BOOKMARK [2][-]{subsection.A.2.2}{Exercise 4.1: days, hours, minutes and seconds \(p. 63\)}{section.A.2}% 288
\BOOKMARK [2][-]{subsection.A.2.3}{Exercise 4.2: Fermat's theorem \(page 63\)}{section.A.2}% 289
\BOOKMARK [2][-]{subsection.A.2.4}{Exercise 4.3: is it a triangle? \(p. 63\)}{section.A.2}% 290
\BOOKMARK [2][-]{subsection.A.2.5}{Exercise 4.4: The Fibonacci numbers? \(p. 64\)}{section.A.2}% 291
\BOOKMARK [2][-]{subsection.A.2.6}{Exercise 4.5: The recurse subroutine \(p. 64\)}{section.A.2}% 292
\BOOKMARK [1][-]{section.A.3}{Exercises of chapter 5: Fruitful functions}{appendix.A}% 293
\BOOKMARK [2][-]{subsection.A.3.1}{Compare \(at the end of section 5.1, p. 66\)}{section.A.3}% 294
\BOOKMARK [2][-]{subsection.A.3.2}{Hypotenuse \(at the end of section 5.2, p. 68\)}{section.A.3}% 295
\BOOKMARK [2][-]{subsection.A.3.3}{Chained relational operators\(in section 5.4\)}{section.A.3}% 296
\BOOKMARK [2][-]{subsection.A.3.4}{The Ackermann function \(exercise 5.2\)}{section.A.3}% 297
\BOOKMARK [2][-]{subsection.A.3.5}{Palindromes \(exercise 5.3\)}{section.A.3}% 298
\BOOKMARK [2][-]{subsection.A.3.6}{Powers \(exercise 5.4\)}{section.A.3}% 299
\BOOKMARK [1][-]{section.A.4}{Exercises of chapter 6 \(Iteration\)}{appendix.A}% 300
\BOOKMARK [2][-]{subsection.A.4.1}{Exercise 6.1: square root \(p. 92\)}{section.A.4}% 301
\BOOKMARK [2][-]{subsection.A.4.2}{Exercise 6.2: Pi estimate \(p. 92\)}{section.A.4}% 302
\BOOKMARK [1][-]{section.A.5}{Exercises of chapter 7 \(strings\)}{appendix.A}% 303
\BOOKMARK [2][-]{subsection.A.5.1}{Exercise in section 7.3: String traversal \(p. 98\)}{section.A.5}% 304
\BOOKMARK [2][-]{subsection.A.5.2}{Exercise in section 7.3: The ducklings \(p. 98\)}{section.A.5}% 305
\BOOKMARK [2][-]{subsection.A.5.3}{Exercise in section 7.3: Counting the letters of a string \(p. 98\)}{section.A.5}% 306
\BOOKMARK [2][-]{subsection.A.5.4}{Section 7.5: Simulating a regex with a loop \(p. 100\)}{section.A.5}% 307
\BOOKMARK [2][-]{subsection.A.5.5}{Exercises in subsection 7.7.8: Regex exercises \(p. 108\)}{section.A.5}% 308
\BOOKMARK [2][-]{subsection.A.5.6}{Exercise in section 7.10: is-reverse subroutine \(p. 115\)}{section.A.5}% 309
\BOOKMARK [2][-]{subsection.A.5.7}{Exercise 7.1: Counting letters \(p. 116\)}{section.A.5}% 310
\BOOKMARK [2][-]{subsection.A.5.8}{Exercise 7.2: Lower-case letters \(p. 116\)}{section.A.5}% 311
\BOOKMARK [2][-]{subsection.A.5.9}{Exercise 7.3: Caesar's cipher \(p. 118\)}{section.A.5}% 312
\BOOKMARK [1][-]{section.A.6}{Exercises of chapter 8 \(Word play\)}{appendix.A}% 313
\BOOKMARK [2][-]{subsection.A.6.1}{Exercise 8.7: Consecutive double letters \(p. 128\)}{section.A.6}% 314
\BOOKMARK [2][-]{subsection.A.6.2}{Exercise 8.8: Palindromes in odometers \(p. 128\)}{section.A.6}% 315
\BOOKMARK [2][-]{subsection.A.6.3}{Exercise 8.9: Palindromes in ages \(p. 129\)}{section.A.6}% 316
\BOOKMARK [1][-]{section.A.7}{Exercises of chapter 9 \(Arrays and lists\)}{appendix.A}% 317
\BOOKMARK [2][-]{subsection.A.7.1}{Exercise of section 9.4: Implementing a queue \(p. 137\)}{section.A.7}% 318
\BOOKMARK [2][-]{subsection.A.7.2}{Exercise of section 9.5: Other ways to modify an array \(p. 139\)}{section.A.7}% 319
\BOOKMARK [2][-]{subsection.A.7.3}{Exercise of section 9.8: Mapping and filtering the elements of a list \(p. 146\)}{section.A.7}% 320
\BOOKMARK [2][-]{subsection.A.7.4}{Exercise of section 9.12: Advanced sorting techniques \(p. 152\)}{section.A.7}% 321
\BOOKMARK [2][-]{subsection.A.7.5}{Exercise 9.1: Nested sum \(p. 154\)}{section.A.7}% 322
\BOOKMARK [2][-]{subsection.A.7.6}{Exercise 9.2: Cumulative sum \(p. 154\)}{section.A.7}% 323
\BOOKMARK [2][-]{subsection.A.7.7}{Exercise 9.3: Middle \(p. 154\)}{section.A.7}% 324
\BOOKMARK [2][-]{subsection.A.7.8}{Exercise 9.4: Chop \(p. 154\)}{section.A.7}% 325
\BOOKMARK [2][-]{subsection.A.7.9}{Exercise 9.5: Subroutine is-sorted \(p. 154\)}{section.A.7}% 326
\BOOKMARK [2][-]{subsection.A.7.10}{Exercise 9.6: Subroutine is-anagram \(p. 155\)}{section.A.7}% 327
\BOOKMARK [2][-]{subsection.A.7.11}{Exercise 9.7: Subroutine has-duplicates \(p. 155\)}{section.A.7}% 328
\BOOKMARK [2][-]{subsection.A.7.12}{Exercise 9.8: Simulating the birthday paradox \(p. 155\)}{section.A.7}% 329
\BOOKMARK [2][-]{subsection.A.7.13}{Exercise 9.9: Comparing push and unshift \(p. 155\)}{section.A.7}% 330
\BOOKMARK [2][-]{subsection.A.7.14}{Exercise 9.10: Bisection search in a list \(p. 155\)}{section.A.7}% 331
\BOOKMARK [2][-]{subsection.A.7.15}{Exercise 9.11: Reverse pairs \(p. 155\)}{section.A.7}% 332
\BOOKMARK [2][-]{subsection.A.7.16}{Exercise 9.12: Interlocking words \(p. 155\)}{section.A.7}% 333
\BOOKMARK [1][-]{section.A.8}{Exercises of chapter 10 \(Hashes\)}{appendix.A}% 334
\BOOKMARK [2][-]{subsection.A.8.1}{Exercise at the end of section 10.1: A hash is a mapping \(p. 159\)}{section.A.8}% 335
\BOOKMARK [2][-]{subsection.A.8.2}{Exercise 10.1: Storing the word list into a hash \(p. 173\)}{section.A.8}% 336
\BOOKMARK [2][-]{subsection.A.8.3}{Exercise 10.2: Memoizing the Ackermann function \(p. 173\)}{section.A.8}% 337
\BOOKMARK [2][-]{subsection.A.8.4}{Exercise 10.3: Finding duplicates with a hash \(p. 173\)}{section.A.8}% 338
\BOOKMARK [2][-]{subsection.A.8.5}{Exercise 10.4: Rotate pairs \(p. 173\)}{section.A.8}% 339
\BOOKMARK [2][-]{subsection.A.8.6}{Exercise 10.5: Homophones \(p. 173\)}{section.A.8}% 340
\BOOKMARK [1][-]{section.A.9}{Exercises of chapter 11}{appendix.A}% 341
\BOOKMARK [2][-]{subsection.A.9.1}{Exercise in section 11.2: the given ... when switch statement \(p. 177\)}{section.A.9}% 342
\BOOKMARK [2][-]{subsection.A.9.2}{Exercise in section 11.10: constructing new operators \(p. 186\)}{section.A.9}% 343
\BOOKMARK [2][-]{subsection.A.9.3}{Exercise in section 11.11: Sets, bags and mixes \(p. 187\)}{section.A.9}% 344
\BOOKMARK [2][-]{subsection.A.9.4}{Exercise in section 11.12: Random words \(p. 188\)}{section.A.9}% 345
\BOOKMARK [2][-]{subsection.A.9.5}{Exercise in section 11.13: Markov analysis \(p. 190\)}{section.A.9}% 346
\BOOKMARK [2][-]{subsection.A.9.6}{Exercises on the Huffman Code \(section 11.18, 199\)}{section.A.9}% 347
\BOOKMARK [1][-]{section.A.10}{Exercises of Chapter 14: Regexes and grammars}{appendix.A}% 348
\BOOKMARK [2][-]{subsection.A.10.1}{Exercise in section 14.1: getting the February dates right \(p. 244\)}{section.A.10}% 349
\BOOKMARK [2][-]{subsection.A.10.2}{Exercise 14.12 \(p. 258\): A grammar for an arithmetic calculator}{section.A.10}% 350
